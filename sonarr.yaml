apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: plex-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
   name: sonarr-deployment
   labels:
     app: sonarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      containers:
         - name: sonarr
           image: ghcr.io/linuxserver/sonarr:preview
           resources:
             requests:
               memory: "512Mi"
               cpu: "1000m"
           env:
             - name: PUID
               value: "999"
             - name: PGID
               value: "999"
           ports:
             - containerPort: 8989
           volumeMounts:
             - mountPath: /config
               name: sonarr-config
             - mountPath: /tv
               name: sonarr-tv
             - mountPath: /downloads
               name: sonarr-downloads
      volumes:
        - name: sonarr-config
          persistentVolumeClaim:
            claimName: sonarr-pvc
        - name: sonarr-tv
          hostPath:
            path: /mnt/tv
        - name: sonarr-downloads
          hostPath:
            path: /mnt/uberplex/downloads
---
kind: Service
apiVersion: v1
metadata:
  name: sonarr-service
spec:
  selector:
    app: sonarr
  ports:
  - protocol: TCP
    port: 8989
    targetPort: 8989
  type: LoadBalancer # I have the system provisioning a load balancer IP in case you don't want to use an ingress
---
apiVersion: networking.k8s.io/v1
metadata:
  name: ingress-sonarr
  namespace: plexstack
  annotations:
    cert-manager.io/cluster-issuer: selfsigned-cluster-issuer #use a self-signed cert!
    kubernetes.io/ingress.class: nginx
spec:
  tls:
    - hosts:
        - sonarr.ccrow.local #using a local DNS entry. Sonarr should not be public!
      secretName: sonarr-tls
  rules:
    - host: sonarr.ccrow.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sonarr-service
                port:
                  number: 8181